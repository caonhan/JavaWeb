package com.serp.model;

// Generated Apr 13, 2016 8:57:22 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Role generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "role")
public class Role implements java.io.Serializable {

	private String roleId;
	private User userByModifier;
	private User userByCreator;
	private String roleName;
	private String description;
	private Date createdDate;
	private Date modifiedDate;
	private Set<Function> functions = new HashSet<Function>(0);
	private Set<User> users = new HashSet<User>(0);

	public Role() {
	}

	public Role(String roleId, String roleName) {
		this.roleId = roleId;
		this.roleName = roleName;
	}

	public Role(String roleId, User userByModifier, User userByCreator,
			String roleName, String description, Date createdDate,
			Date modifiedDate, Set<Function> functions, Set<User> users) {
		this.roleId = roleId;
		this.userByModifier = userByModifier;
		this.userByCreator = userByCreator;
		this.roleName = roleName;
		this.description = description;
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
		this.functions = functions;
		this.users = users;
	}

	@Id
	@Column(name = "role_id", unique = true, nullable = false, length = 50)
	public String getRoleId() {
		return this.roleId;
	}

	public void setRoleId(String roleId) {
		this.roleId = roleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modifier")
	public User getUserByModifier() {
		return this.userByModifier;
	}

	public void setUserByModifier(User userByModifier) {
		this.userByModifier = userByModifier;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator")
	public User getUserByCreator() {
		return this.userByCreator;
	}

	public void setUserByCreator(User userByCreator) {
		this.userByCreator = userByCreator;
	}

	@Column(name = "role_name", nullable = false, length = 100)
	public String getRoleName() {
		return this.roleName;
	}

	public void setRoleName(String roleName) {
		this.roleName = roleName;
	}

	@Column(name = "description", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "modified_date", length = 10)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	//fix ở đây
	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "role_function", catalog = "serp", joinColumns = { @JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "function_id", nullable = false, updatable = false) })
	public Set<Function> getFunctions() {
		return this.functions;
	}

	public void setFunctions(Set<Function> functions) {
		this.functions = functions;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "role")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@Override
	public String toString() {
		return "Role [roleId=" + roleId + ", userByModifier=" + userByModifier
				+ ", userByCreator=" + userByCreator + ", roleName=" + roleName
				+ ", description=" + description + ", createdDate="
				+ createdDate + ", modifiedDate=" + modifiedDate
				+ ", functions=" + functions + ", users=" + users + "]";
	}

	
}
