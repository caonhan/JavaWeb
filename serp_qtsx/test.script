SET DATABASE UNIQUE NAME HSQLDB48B5668F44
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 0
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE MEMORY TABLE PUBLIC.CUSTOMER(CUSTOMER_ID INTEGER NOT NULL PRIMARY KEY,COMPANY_NAME VARCHAR(200),ADDRESS VARCHAR(100),ASSIGNEE VARCHAR(50),TELEPHONE VARCHAR(20),MOBILE_PHONE VARCHAR(20),FAX VARCHAR(20),EMAIL VARCHAR(50),WEBSITE VARCHAR(255),CREATED_BY VARCHAR(50),CREATED_DATE DATE,MODIFIED_BY VARCHAR(50),DESCRIPTION VARCHAR(1000))
CREATE MEMORY TABLE PUBLIC."element"(E_ID VARCHAR(50) NOT NULL PRIMARY KEY,E_NAME VARCHAR(200) NOT NULL,E_UNIT VARCHAR(50) NOT NULL)
CREATE MEMORY TABLE PUBLIC.ESTIMATE(ES_ID INTEGER NOT NULL PRIMARY KEY,ES_CREATOR_ID VARCHAR(50) NOT NULL,ES_ORDER_ID VARCHAR(50) NOT NULL,ES_PUBLISHED_DATE DATE NOT NULL,ES_STATUS_ID INTEGER NOT NULL,ES_APPROVER_ID VARCHAR(50),ES_APPROVE_CONTENT VARCHAR(65535) NOT NULL)
CREATE MEMORY TABLE PUBLIC.ESTIMATE_DETAIL(ED_ID INTEGER NOT NULL PRIMARY KEY,ED_ESTIMATE_ID INTEGER NOT NULL,ED_ELEMENT_ID VARCHAR(50) NOT NULL,ED_MATERIAL_ID VARCHAR(50) NOT NULL,ED_QUANTITY INTEGER NOT NULL,ED_MATERIAL_WEIGHT DOUBLE NOT NULL,ED_PHI DOUBLE NOT NULL,ED_X DOUBLE NOT NULL,ED_Y DOUBLE NOT NULL,ED_Z DOUBLE NOT NULL,ED_LABOR_COST DOUBLE NOT NULL,ED_EQUIPMENT_COST DOUBLE NOT NULL,ED_TOOL_COST DOUBLE NOT NULL,ED_EXTERNAL_COST DOUBLE NOT NULL,ED_PRICE DOUBLE NOT NULL,ED_TOTAL_COST DOUBLE NOT NULL,FOREIGN KEY(ED_ELEMENT_ID) REFERENCES PUBLIC."element"(E_ID),FOREIGN KEY(ED_ESTIMATE_ID) REFERENCES PUBLIC.ESTIMATE(ES_ID))
CREATE MEMORY TABLE PUBLIC."function"(FUNCTION_ID VARCHAR(50) NOT NULL PRIMARY KEY,FUNCTION_NAME VARCHAR(100) NOT NULL,DESCRIPTION VARCHAR(500))
CREATE MEMORY TABLE PUBLIC.LIMIT_INVENTORY(LIMIT_INVENTORY_ID INTEGER NOT NULL PRIMARY KEY,ORDER_ID VARCHAR(50) NOT NULL,ORDER_NAME VARCHAR(50) NOT NULL,DATE_WANTED DATE NOT NULL,TIME_MODIFY INTEGER NOT NULL,FACTORY_MANAGER_ID VARCHAR(50) NOT NULL,FACTORY_MANAGER_STATUS VARCHAR(50) NOT NULL,DIRECTORATE_ID VARCHAR(50) NOT NULL,DIRECTORATE_STATUS INTEGER NOT NULL)
CREATE MEMORY TABLE PUBLIC.LIMIT_INVENTORY_DETAIL(LIMIT_INVENTORY_DETAIL_ID INTEGER NOT NULL PRIMARY KEY,LIMIT_INVENTORY_ID INTEGER NOT NULL,ORDER_ID VARCHAR(50) NOT NULL,ORDER_NAME VARCHAR(50),DATE_WANTED VARCHAR(50),TIME_MODIFY VARCHAR(50),STOCK_NAME VARCHAR(50) NOT NULL,MATERIAL VARCHAR(50) NOT NULL,QUANTITY INTEGER NOT NULL,UNIT VARCHAR(50) NOT NULL,O DOUBLE NOT NULL,X DOUBLE NOT NULL,Y DOUBLE NOT NULL,Z DOUBLE NOT NULL,NOTE VARCHAR(50),FOREIGN KEY(LIMIT_INVENTORY_ID) REFERENCES PUBLIC.LIMIT_INVENTORY(LIMIT_INVENTORY_ID))
CREATE MEMORY TABLE PUBLIC.MATERIAL(M_ID VARCHAR(50) NOT NULL PRIMARY KEY,M_NAME VARCHAR(200) NOT NULL,M_PRICE DOUBLE NOT NULL)
CREATE MEMORY TABLE PUBLIC.ORDERS(ORDERID VARCHAR(50) NOT NULL PRIMARY KEY,CUSTOMERID INTEGER,USERID VARCHAR(50),PROJECTNAME VARCHAR(50),CREATEDATE DATE,ORDERCONTENT VARCHAR(65535),POSSIBILITY INTEGER,JUDGINGCONTENT VARCHAR(65535),APPROVESTATUS INTEGER,APPROVALCONTENT VARCHAR(65535),APPROVER VARCHAR(50),PRODUCTNAME VARCHAR(50),AMOUNTOFPRODUCT INTEGER,DUEDATE DATE,FOREIGN KEY(CUSTOMERID) REFERENCES PUBLIC.CUSTOMER(CUSTOMER_ID))
CREATE MEMORY TABLE PUBLIC.PROCESSING_DOCUMENT(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(50),CREATED_DATE DATE NOT NULL,PRODUCTION_ORDER VARCHAR(50) NOT NULL,PROCESSING_TECHNOLOGY_NOTE INTEGER,PROGRAM_NOTE VARCHAR(50),OPERATION_TRACE_NOTE VARCHAR(50) NOT NULL,LIMIT_INVENTORY_NOTE INTEGER NOT NULL,FOREIGN KEY(LIMIT_INVENTORY_NOTE) REFERENCES PUBLIC.LIMIT_INVENTORY(LIMIT_INVENTORY_ID),FOREIGN KEY(PRODUCTION_ORDER) REFERENCES PUBLIC.ORDERS(ORDERID))
CREATE MEMORY TABLE PUBLIC.PROCESSING_EDITOR(ID INTEGER NOT NULL PRIMARY KEY,EDITOR VARCHAR(50) NOT NULL,ORDER_CODE VARCHAR(50) NOT NULL,PRODUCT_NAME VARCHAR(50),"date" DATE NOT NULL)
CREATE MEMORY TABLE PUBLIC.PROCESSING_TECHNOLOGY(ID INTEGER NOT NULL PRIMARY KEY,PRODUCT_NAME VARCHAR(50),ORDER_CODE VARCHAR(50) NOT NULL,DRAWING_SYMBOLS VARCHAR(20),LEADERS_ACCEPTED VARCHAR(50) NOT NULL,MANAGER_ACCEPTED VARCHAR(50) NOT NULL,OPERATION INTEGER,OPERATION_CONTENT VARCHAR(250),OPERATION_DESIGN VARCHAR(50) NOT NULL,JIG VARCHAR(50),ACCESSORIES VARCHAR(50),NOTE VARCHAR(250))
CREATE MEMORY TABLE PUBLIC.PRODUCTION_ORDER(PO_ID INTEGER NOT NULL PRIMARY KEY,PO_ORDER_ID VARCHAR(20) NOT NULL,PO_CONTENT VARCHAR(1000) NOT NULL,PO_QUANTITY INTEGER NOT NULL,PO_UNIT VARCHAR(50) NOT NULL,PO_PROCESS_TECHNOLOGY VARCHAR(1000) NOT NULL,PO_TIMELENGTH INTEGER NOT NULL,PO_STARTTIME DATE NOT NULL,PO_FINISHTIME DATE NOT NULL)
CREATE MEMORY TABLE PUBLIC.QUOTATION(QUOTATIONID VARCHAR(50) NOT NULL PRIMARY KEY,NUMOFVALIDITYDAYS VARCHAR(50),NUMOFDAYSTOCOMPLETE INTEGER,PAYMENTMETHOD1 VARCHAR(50),PAYMENTMETHOD2 VARCHAR(55),STATUS INTEGER,USERID VARCHAR(50),PUBLISHDATE DATE,AMOUNT DOUBLE,VAT DOUBLE,TOTALAMOUNT DOUBLE,ESTIMATEID INTEGER NOT NULL,QUOTATIONNO INTEGER,FOREIGN KEY(ESTIMATEID) REFERENCES PUBLIC.ESTIMATE(ES_ID))
CREATE MEMORY TABLE PUBLIC.QUOTATIONDETAILS(QUOTATIONDETAILSID INTEGER NOT NULL PRIMARY KEY,QUOTATIONID VARCHAR(50) NOT NULL,NAMEOFDETAIL VARCHAR(50),QUANTITY INTEGER,UNIT VARCHAR(50),PRICE DOUBLE,AMOUNT DOUBLE,NOTE VARCHAR(65535),FOREIGN KEY(QUOTATIONID) REFERENCES PUBLIC.QUOTATION(QUOTATIONID))
CREATE MEMORY TABLE PUBLIC.ROLE(ROLE_ID VARCHAR(50) NOT NULL PRIMARY KEY,ROLE_NAME VARCHAR(100) NOT NULL,DESCRIPTION VARCHAR(500),CREATOR VARCHAR(50),CREATED_DATE DATE,MODIFIER VARCHAR(50),MODIFIED_DATE DATE)
CREATE MEMORY TABLE PUBLIC.ROLE_FUNCTION(ROLE_ID VARCHAR(50) NOT NULL,FUNCTION_ID VARCHAR(50) NOT NULL,PRIMARY KEY(ROLE_ID,FUNCTION_ID),FOREIGN KEY(FUNCTION_ID) REFERENCES PUBLIC."function"(FUNCTION_ID),FOREIGN KEY(ROLE_ID) REFERENCES PUBLIC.ROLE(ROLE_ID))
CREATE MEMORY TABLE PUBLIC.STATUS(STATUS_ID INTEGER NOT NULL PRIMARY KEY,STATUS_NAME VARCHAR(50) NOT NULL)
CREATE MEMORY TABLE PUBLIC.STOCK_REQUISITION(REQUISITION_ID INTEGER NOT NULL PRIMARY KEY,DEPARTMENT VARCHAR(100) NOT NULL,LIMIT_INVENTORY_ID INTEGER NOT NULL,ORDER_ID VARCHAR(50) NOT NULL,DATE_WANTED DATE,CREATOR VARCHAR(50) NOT NULL,CREATED_DATE DATE NOT NULL,RECOMMEND_SUPPLIER VARCHAR(255),REASON VARCHAR(255),FACTORY_MANAGER VARCHAR(50),FACTORY_MANAGER_STATUS INTEGER NOT NULL,FACTORY_MANAGER_SIGN_DATE DATE,HFAD VARCHAR(50),HFAD_STATUS INTEGER NOT NULL,HFAD_SIGN_DATE DATE,LAST_MODIFIED_DATE TIMESTAMP NOT NULL,LAST_MODIFIED_USER VARCHAR(50) NOT NULL,FACTORY_MANAGER_COMMENT VARCHAR(255),HFAD_COMMENT VARCHAR(255),FOREIGN KEY(LIMIT_INVENTORY_ID) REFERENCES PUBLIC.LIMIT_INVENTORY(LIMIT_INVENTORY_ID),FOREIGN KEY(ORDER_ID) REFERENCES PUBLIC.ORDERS(ORDERID))
CREATE MEMORY TABLE PUBLIC.STOCK_REQUISITION_DETAILS(STOCK_REQUISITION_DETAILS_ID INTEGER NOT NULL PRIMARY KEY,STOCK_REQUISITION_ID INTEGER NOT NULL,NAME VARCHAR(80) NOT NULL,PHI DOUBLE NOT NULL,LENGTH DOUBLE NOT NULL,WIDTH DOUBLE NOT NULL,HEIGHT DOUBLE NOT NULL,MATERIAL VARCHAR(50),QUANTITY INTEGER NOT NULL,UNIT VARCHAR(45) NOT NULL,NOTE VARCHAR(255),FOREIGN KEY(MATERIAL) REFERENCES PUBLIC.MATERIAL(M_ID),FOREIGN KEY(STOCK_REQUISITION_ID) REFERENCES PUBLIC.STOCK_REQUISITION(REQUISITION_ID))
CREATE MEMORY TABLE PUBLIC."user"(USER_ID VARCHAR(50) NOT NULL PRIMARY KEY,PASSWORD VARCHAR(50),NAME VARCHAR(50),BIRTHDATE DATE,PHONENUMBER VARCHAR(50),EMAIL VARCHAR(50),ADDRESS VARCHAR(50),DEPARTMENT VARCHAR(50),STATUS INTEGER,ROLE_ID VARCHAR(50),FOREIGN KEY(ROLE_ID) REFERENCES PUBLIC.ROLE(ROLE_ID))
ALTER TABLE PUBLIC.ESTIMATE ADD FOREIGN KEY(ES_ORDER_ID) REFERENCES PUBLIC.ORDERS(ORDERID)
ALTER TABLE PUBLIC.ESTIMATE ADD FOREIGN KEY(ES_STATUS_ID) REFERENCES PUBLIC.STATUS(STATUS_ID)
ALTER TABLE PUBLIC.ESTIMATE ADD FOREIGN KEY(ES_APPROVER_ID) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.ESTIMATE ADD FOREIGN KEY(ES_CREATOR_ID) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.ESTIMATE_DETAIL ADD FOREIGN KEY(ED_MATERIAL_ID) REFERENCES PUBLIC.MATERIAL(M_ID)
ALTER TABLE PUBLIC.LIMIT_INVENTORY ADD FOREIGN KEY(DIRECTORATE_ID) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.LIMIT_INVENTORY ADD FOREIGN KEY(FACTORY_MANAGER_ID) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.LIMIT_INVENTORY ADD FOREIGN KEY(DIRECTORATE_STATUS) REFERENCES PUBLIC.STATUS(STATUS_ID)
ALTER TABLE PUBLIC.LIMIT_INVENTORY ADD FOREIGN KEY(ORDER_ID) REFERENCES PUBLIC.ORDERS(ORDERID)
ALTER TABLE PUBLIC.ORDERS ADD FOREIGN KEY(APPROVER) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.ORDERS ADD FOREIGN KEY(USERID) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.ORDERS ADD FOREIGN KEY(APPROVESTATUS) REFERENCES PUBLIC.STATUS(STATUS_ID)
ALTER TABLE PUBLIC.PROCESSING_DOCUMENT ADD FOREIGN KEY(PROCESSING_TECHNOLOGY_NOTE) REFERENCES PUBLIC.PROCESSING_TECHNOLOGY(ID)
ALTER TABLE PUBLIC.QUOTATION ADD FOREIGN KEY(USERID) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.ROLE ADD FOREIGN KEY(CREATOR) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.ROLE ADD FOREIGN KEY(MODIFIER) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.STOCK_REQUISITION ADD FOREIGN KEY(CREATOR) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.STOCK_REQUISITION ADD FOREIGN KEY(FACTORY_MANAGER) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.STOCK_REQUISITION ADD FOREIGN KEY(HFAD) REFERENCES PUBLIC."user"(USER_ID)
ALTER TABLE PUBLIC.STOCK_REQUISITION ADD FOREIGN KEY(LAST_MODIFIED_USER) REFERENCES PUBLIC."user"(USER_ID)
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO "function" VALUES('FT1','T?o ??n h\u00e0ng',NULL)
INSERT INTO "function" VALUES('FT2','X\u00e1c nh?n ??n h\u00e0ng',NULL)
INSERT INTO "function" VALUES('FT3','T?o b?ng d? to\u00e1n',NULL)
INSERT INTO "function" VALUES('FT4','X\u00e1c nh?n b?ng d? to\u00e1n',NULL)
INSERT INTO ROLE VALUES('AD','Admin','?\u00e2y l\u00e0 quy?n Admin t?i cao...',NULL,'2016-04-16',NULL,'2016-04-19')
INSERT INTO ROLE VALUES('DL','Delete',NULL,NULL,NULL,NULL,NULL)
INSERT INTO ROLE VALUES('HT','Hi?u Tr??ng',NULL,NULL,NULL,NULL,NULL)
INSERT INTO ROLE VALUES('NR','No Role',NULL,NULL,NULL,NULL,NULL)
INSERT INTO ROLE VALUES('NVCN','Nh\u00e2n Vi\u00ean C\u00f4ng Ngh?','M\u00f4 t? cho NVCN',NULL,'2016-04-16',NULL,'2016-04-18')
INSERT INTO ROLE VALUES('NVKT','Nh\u00e2n vi\u00ean k? thu?t',NULL,NULL,NULL,NULL,NULL)
INSERT INTO ROLE VALUES('PGD','Ph\u00f3 Gi\u00e1m ??c',NULL,NULL,NULL,NULL,NULL)
INSERT INTO ROLE VALUES('PX','Ph\u00f3 X??ng','Short Description',NULL,'2016-04-16',NULL,'2016-04-19')
INSERT INTO ROLE VALUES('TX','Tr??ng x??ng','Quy?n Tr??ng X??ng',NULL,'2016-04-16',NULL,'2016-04-22')
INSERT INTO ROLE_FUNCTION VALUES('AD','FT2')
INSERT INTO ROLE_FUNCTION VALUES('AD','FT3')
INSERT INTO ROLE_FUNCTION VALUES('AD','FT4')
INSERT INTO ROLE_FUNCTION VALUES('NVCN','FT1')
INSERT INTO ROLE_FUNCTION VALUES('PX','FT1')
INSERT INTO ROLE_FUNCTION VALUES('TX','FT1')
INSERT INTO ROLE_FUNCTION VALUES('TX','FT2')
INSERT INTO STATUS VALUES(1,'approved')
INSERT INTO STATUS VALUES(2,'approve_awaiting')
INSERT INTO STATUS VALUES(3,'cancelled')
INSERT INTO STATUS VALUES(4,'need_re_estimating')
INSERT INTO "user" VALUES('user0001','huancuibap','Nguy?n V?n A','2016-04-01','0963152067','anguyenvan@gmail.com','TP HCM',NULL,NULL,'AD')
INSERT INTO "user" VALUES('user0002','huancuibap','Nguy?n V?n B','2016-04-01','0909653148','bnguyenvan@gmail.com','GV','XXX',NULL,'NVCN')
